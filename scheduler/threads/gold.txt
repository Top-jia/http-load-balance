
threads:
		10～15天:代码写完, 并熟悉其过程
	对于线程的处理, 要完成的目标：
		1.将子线程加入到程序中, 将线程处理问题解决:
			线程初步:
				发展历史LinuxThreads的优缺点
					缺点:
							进程模拟(共享地址空间， 信号, 文件描述符)
								PID号
								信号的接受并处理
								用户ID, 组ID对一个不同线程是不一样的。
								进程数量==线程数量
							管理线程:
								管理线程->管理工作线程, 退出, 唤醒, 内存
								增加系统开销
					优点:
							给线程的实现开了头
				NPTL的优缺点.
					优点:
							不再是进程模拟
							去掉管程  由内核完成
							运行到不同的CPU上
							同步由内核完成, 跨线程锁
							
				相关API的使用
	
				属性的设置,
							
			线程同步问题,
				信号量, 互斥锁, 条件变量, 同步包装类
					互斥锁:保护关键的代码
					条件变量:共享数据， 线程通知机制， 当共享数据达到某个值的时候,唤醒等待这个共享数据的线程.
			test_0
			可重入问题.
			线程和进程问题, 和锁问题
			线程和信号问题,

		2.对于线程间, 加入定时器和信号事件机制
			定时器3种:
					SIGALARM
					socket中SO_RCVTIMEO 和 SO_SNDTIMEO
					I/O复用参数
			事件三种:
					i/o事件
					信号事件
					定时器时间---------

					统一事件源机制的使用
		3.加入web--http连接, json的数据传输机制.
			http的加入
				状态机的加入
				解析
				组装
			json:封装数据的设计
				如何分装	

		4.抓包机制tcpdump的使用和相关命令的使用.
			tcpdump
			strace
			iptable
			lsof
			nc
			vmstat
			ifstat
			mpstat
